version: 2.1

orbs:
  node: circleci/node@5
  docker: circleci/docker@2.8.1
  trivy: cci-labs/trivy@1.0.0 

executors:
  node-executor:
    docker:
      - image: cimg/node:20.17.0

  docker-executor:
    machine:
      image: ubuntu-2004:current

jobs:
  build-nextjs:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          override-ci-command: npm install --force
      - run:
          name: Set Node.js Environment
          command: echo 'NODE_ENV=production' >> $BASH_ENV

      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

      - run:
          name: Build the Next.js project
          command: npm run build

      - run:
          name: Prepare Build Artifacts
          command: |
            mkdir -p ~/artifacts/.next
            mkdir -p ~/artifacts/public
            cp -R .next/* ~/artifacts/.next/ || true
            cp -R public/* ~/artifacts/public/ || true

      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - .next
            - public

  scan-dependencies:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          override-ci-command: npm install --force
      
      # Run Trivy scan on the current directory for vulnerabilities in dependencies
      - trivy/scan:
          scan-type: "fs"
          severity: "HIGH,CRITICAL"
          ignore-unfixed: true
          exit-code: 1 # Fail if vulnerabilities found
          path: "." # Ensure this path is correct

  docker-build-and-push-and-run:
    executor: docker-executor
    steps:
      - checkout
      
      # Attach artifacts from the previous job to prepare for Docker build context
      - attach_workspace:
          at: ~/artifacts
      
      - run:
          name: Prepare Docker Build Context
          command: |
            cp -R ~/artifacts/.next .next || true # Use || true to avoid breaking if directory doesn't exist
            cp -R ~/artifacts/public public || true

      # Build Docker image with appropriate tags
      - run:
          name: Build Docker Image
          command: |
            docker build \
              --build-arg NEXT_BUILD_ID=${CIRCLE_SHA1} \
              -t vathanaksol/cloudinator-ui:${CIRCLE_SHA1:-latest} .

      # Login to Docker Hub before pushing the image
      - run:
          name: Docker Login
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
        
      # Push Docker image to Docker Hub with the specified tag 
      - run:
          name: Push Docker Image
          command: |
            docker push vathanaksol/cloudinator-ui:${CIRCLE_SHA1:-latest}

workflows:
  build-and-deploy:
    jobs:
      - build-nextjs
      
      # Ensure dependencies are scanned before building Docker images 
      - scan-dependencies
      
      # Run Docker build and push after both previous jobs complete successfully 
      - docker-build-and-push-and-run:
          requires:
            - build-nextjs
            - scan-dependencies 
